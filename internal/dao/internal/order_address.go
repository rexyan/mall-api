// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OrderAddressDao is the data access object for table tb_newbee_mall_order_address.
type OrderAddressDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns OrderAddressColumns // columns contains all the column names of Table for convenient usage.
}

// OrderAddressColumns defines and stores column names for table tb_newbee_mall_order_address.
type OrderAddressColumns struct {
	OrderId       string //
	UserName      string // 收货人姓名
	UserPhone     string // 收货人手机号
	ProvinceName  string // 省
	CityName      string // 城
	RegionName    string // 区
	DetailAddress string // 收件详细地址(街道/楼宇/单元)
}

//  orderAddressColumns holds the columns for table tb_newbee_mall_order_address.
var orderAddressColumns = OrderAddressColumns{
	OrderId:       "order_id",
	UserName:      "user_name",
	UserPhone:     "user_phone",
	ProvinceName:  "province_name",
	CityName:      "city_name",
	RegionName:    "region_name",
	DetailAddress: "detail_address",
}

// NewOrderAddressDao creates and returns a new DAO object for table data access.
func NewOrderAddressDao() *OrderAddressDao {
	return &OrderAddressDao{
		group:   "default",
		table:   "tb_newbee_mall_order_address",
		columns: orderAddressColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OrderAddressDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OrderAddressDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OrderAddressDao) Columns() OrderAddressColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OrderAddressDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OrderAddressDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OrderAddressDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
