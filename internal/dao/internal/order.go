// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OrderDao is the data access object for table tb_newbee_mall_order.
type OrderDao struct {
	table   string       // table is the underlying table name of the DAO.
	group   string       // group is the database configuration group name of current DAO.
	columns OrderColumns // columns contains all the column names of Table for convenient usage.
}

// OrderColumns defines and stores column names for table tb_newbee_mall_order.
type OrderColumns struct {
	OrderId     string // 订单表主键id
	OrderNo     string // 订单号
	UserId      string // 用户主键id
	TotalPrice  string // 订单总价
	PayStatus   string // 支付状态:0.未支付,1.支付成功,-1:支付失败
	PayType     string // 0.无 1.支付宝支付 2.微信支付
	PayTime     string // 支付时间
	OrderStatus string // 订单状态:0.待支付 1.已支付 2.配货完成 3:出库成功 4.交易成功 -1.手动关闭 -2.超时关闭 -3.商家关闭
	ExtraInfo   string // 订单body
	IsDeleted   string // 删除标识字段(0-未删除 1-已删除)
	CreateTime  string // 创建时间
	UpdateTime  string // 最新修改时间
}

//  orderColumns holds the columns for table tb_newbee_mall_order.
var orderColumns = OrderColumns{
	OrderId:     "order_id",
	OrderNo:     "order_no",
	UserId:      "user_id",
	TotalPrice:  "total_price",
	PayStatus:   "pay_status",
	PayType:     "pay_type",
	PayTime:     "pay_time",
	OrderStatus: "order_status",
	ExtraInfo:   "extra_info",
	IsDeleted:   "is_deleted",
	CreateTime:  "create_time",
	UpdateTime:  "update_time",
}

// NewOrderDao creates and returns a new DAO object for table data access.
func NewOrderDao() *OrderDao {
	return &OrderDao{
		group:   "default",
		table:   "tb_newbee_mall_order",
		columns: orderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OrderDao) Columns() OrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
