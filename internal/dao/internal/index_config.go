// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// IndexConfigDao is the data access object for table tb_newbee_mall_index_config.
type IndexConfigDao struct {
	table   string             // table is the underlying table name of the DAO.
	group   string             // group is the database configuration group name of current DAO.
	columns IndexConfigColumns // columns contains all the column names of Table for convenient usage.
}

// IndexConfigColumns defines and stores column names for table tb_newbee_mall_index_config.
type IndexConfigColumns struct {
	ConfigId    string // 首页配置项主键id
	ConfigName  string // 显示字符(配置搜索时不可为空，其他可为空)
	ConfigType  string // 1-搜索框热搜 2-搜索下拉框热搜 3-(首页)热销商品 4-(首页)新品上线 5-(首页)为你推荐
	GoodsId     string // 商品id 默认为0
	RedirectUrl string // 点击后的跳转地址(默认不跳转)
	ConfigRank  string // 排序值(字段越大越靠前)
	IsDeleted   string // 删除标识字段(0-未删除 1-已删除)
	CreateTime  string // 创建时间
	CreateUser  string // 创建者id
	UpdateTime  string // 最新修改时间
	UpdateUser  string // 修改者id
}

//  indexConfigColumns holds the columns for table tb_newbee_mall_index_config.
var indexConfigColumns = IndexConfigColumns{
	ConfigId:    "config_id",
	ConfigName:  "config_name",
	ConfigType:  "config_type",
	GoodsId:     "goods_id",
	RedirectUrl: "redirect_url",
	ConfigRank:  "config_rank",
	IsDeleted:   "is_deleted",
	CreateTime:  "create_time",
	CreateUser:  "create_user",
	UpdateTime:  "update_time",
	UpdateUser:  "update_user",
}

// NewIndexConfigDao creates and returns a new DAO object for table data access.
func NewIndexConfigDao() *IndexConfigDao {
	return &IndexConfigDao{
		group:   "default",
		table:   "tb_newbee_mall_index_config",
		columns: indexConfigColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *IndexConfigDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *IndexConfigDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *IndexConfigDao) Columns() IndexConfigColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *IndexConfigDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *IndexConfigDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *IndexConfigDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
