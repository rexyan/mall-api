// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UserTokenDao is the data access object for table tb_newbee_mall_user_token.
type UserTokenDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns UserTokenColumns // columns contains all the column names of Table for convenient usage.
}

// UserTokenColumns defines and stores column names for table tb_newbee_mall_user_token.
type UserTokenColumns struct {
	UserId     string // 用户主键id
	Token      string // token值(32位字符串)
	UpdateTime string // 修改时间
	ExpireTime string // token过期时间
}

//  userTokenColumns holds the columns for table tb_newbee_mall_user_token.
var userTokenColumns = UserTokenColumns{
	UserId:     "user_id",
	Token:      "token",
	UpdateTime: "update_time",
	ExpireTime: "expire_time",
}

// NewUserTokenDao creates and returns a new DAO object for table data access.
func NewUserTokenDao() *UserTokenDao {
	return &UserTokenDao{
		group:   "default",
		table:   "tb_newbee_mall_user_token",
		columns: userTokenColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UserTokenDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UserTokenDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UserTokenDao) Columns() UserTokenColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UserTokenDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UserTokenDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UserTokenDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
