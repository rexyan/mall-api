// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UserDao is the data access object for table tb_newbee_mall_user.
type UserDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns UserColumns // columns contains all the column names of Table for convenient usage.
}

// UserColumns defines and stores column names for table tb_newbee_mall_user.
type UserColumns struct {
	UserId        string // 用户主键id
	NickName      string // 用户昵称
	LoginName     string // 登陆名称(默认为手机号)
	PasswordMd5   string // MD5加密后的密码
	IntroduceSign string // 个性签名
	IsDeleted     string // 注销标识字段(0-正常 1-已注销)
	LockedFlag    string // 锁定标识字段(0-未锁定 1-已锁定)
	CreateTime    string // 注册时间
}

//  userColumns holds the columns for table tb_newbee_mall_user.
var userColumns = UserColumns{
	UserId:        "user_id",
	NickName:      "nick_name",
	LoginName:     "login_name",
	PasswordMd5:   "password_md5",
	IntroduceSign: "introduce_sign",
	IsDeleted:     "is_deleted",
	LockedFlag:    "locked_flag",
	CreateTime:    "create_time",
}

// NewUserDao creates and returns a new DAO object for table data access.
func NewUserDao() *UserDao {
	return &UserDao{
		group:   "default",
		table:   "tb_newbee_mall_user",
		columns: userColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UserDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UserDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UserDao) Columns() UserColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UserDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UserDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UserDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
