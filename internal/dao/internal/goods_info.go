// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// GoodsInfoDao is the data access object for table tb_newbee_mall_goods_info.
type GoodsInfoDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns GoodsInfoColumns // columns contains all the column names of Table for convenient usage.
}

// GoodsInfoColumns defines and stores column names for table tb_newbee_mall_goods_info.
type GoodsInfoColumns struct {
	GoodsId            string // 商品表主键id
	GoodsName          string // 商品名
	GoodsIntro         string // 商品简介
	GoodsCategoryId    string // 关联分类id
	GoodsCoverImg      string // 商品主图
	GoodsCarousel      string // 商品轮播图
	GoodsDetailContent string // 商品详情
	OriginalPrice      string // 商品价格
	SellingPrice       string // 商品实际售价
	StockNum           string // 商品库存数量
	Tag                string // 商品标签
	GoodsSellStatus    string // 商品上架状态 1-下架 0-上架
	CreateUser         string // 添加者主键id
	CreateTime         string // 商品添加时间
	UpdateUser         string // 修改者主键id
	UpdateTime         string // 商品修改时间
}

//  goodsInfoColumns holds the columns for table tb_newbee_mall_goods_info.
var goodsInfoColumns = GoodsInfoColumns{
	GoodsId:            "goods_id",
	GoodsName:          "goods_name",
	GoodsIntro:         "goods_intro",
	GoodsCategoryId:    "goods_category_id",
	GoodsCoverImg:      "goods_cover_img",
	GoodsCarousel:      "goods_carousel",
	GoodsDetailContent: "goods_detail_content",
	OriginalPrice:      "original_price",
	SellingPrice:       "selling_price",
	StockNum:           "stock_num",
	Tag:                "tag",
	GoodsSellStatus:    "goods_sell_status",
	CreateUser:         "create_user",
	CreateTime:         "create_time",
	UpdateUser:         "update_user",
	UpdateTime:         "update_time",
}

// NewGoodsInfoDao creates and returns a new DAO object for table data access.
func NewGoodsInfoDao() *GoodsInfoDao {
	return &GoodsInfoDao{
		group:   "default",
		table:   "tb_newbee_mall_goods_info",
		columns: goodsInfoColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *GoodsInfoDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *GoodsInfoDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *GoodsInfoDao) Columns() GoodsInfoColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *GoodsInfoDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *GoodsInfoDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *GoodsInfoDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
